{"version":3,"sources":["style.js","App.js","crypto2.js","index.js"],"names":["PasswordContainer","styled","form","Container","div","FormField","Label","label","Textarea","textarea","Button","button","App","props","useState","password","setPassword","encryptableText","setEncryptableText","decryptableText","setDecryptableText","cipher","useRef","ev","a","preventDefault","current","encrypt","encrypted","console","log","toString","decrypt","decrypted","CryptoJS","Utf8","onSubmit","message","getCrypto","htmlFor","className","type","onChange","target","value","ReactDOM","render","document","getElementById"],"mappings":"qlCAEO,IAAMA,EAAoBC,IAAOC,KAAV,KAKjBC,EAAYF,IAAOG,IAAV,KAKTC,EAAYJ,IAAOC,KAAV,KASTI,EAAQL,IAAOM,MAAV,KAMLC,EAAWP,IAAOQ,SAAV,KAKRC,EAAST,IAAOU,OAAV,KCsDJC,MAjFf,SAAcC,GAAQ,IAAD,EACaC,mBAAS,IADtB,mBACZC,EADY,KACFC,EADE,OAE2BF,mBAAS,IAFpC,mBAEZG,EAFY,KAEKC,EAFL,OAG2BJ,mBAAS,IAHpC,mBAGZK,EAHY,KAGKC,EAHL,KAIbC,EAASC,iBAAO,MAJH,4CAiBnB,WAA4BC,GAA5B,iBAAAC,EAAA,yDACED,EAAGE,iBAEER,EAHP,0CAG+B,GAH/B,uBAK0BI,EAAOK,QAAQC,QAAQV,GALjD,cAKQW,EALR,OAOEC,QAAQC,IAAIF,EAAUG,YAPxB,SAS0BV,EAAOK,QAAQM,QAAQJ,EAAUG,YAT3D,cASQE,EATR,OAWEJ,QAAQC,IAAIG,EAAUF,SAASG,MAAaC,OAX9C,mBAaS,GAbT,6CAjBmB,kEAiCnB,WAA4BZ,GAA5B,eAAAC,EAAA,yDACED,EAAGE,iBAEEN,EAHP,0CAG+B,GAH/B,uBAK0BE,EAAOK,QAAQM,QAAQb,GALjD,cAKQc,EALR,OAOEJ,QAAQC,IAAIG,EAAUF,SAASG,MAAaC,OAP9C,mBASS,GATT,4CAjCmB,sBA6CnB,OACE,6BACE,kBAACnC,EAAD,CAAmBoC,SAzCvB,SAAyBb,GAGvB,OAFAA,EAAGE,mBAEEV,IAELM,EAAOK,QCdI,SAAkBX,GAS/B,MAAO,CACLY,QATF,SAAkBU,GAChB,OAAOH,MAAaP,QAAQU,EAAStB,IASrCiB,QANF,SAAkBK,GAChB,OAAOH,MAAaF,QAAQK,EAAStB,IAMrCA,YDEiBuB,CAAUvB,GAC3BC,EAAY,KAEL,KAkCH,2BAAOuB,QAAQ,WAAWC,UAAU,WAApC,YACA,2BAAOC,KAAK,OAAOC,SAAU,SAAAnB,GAAE,OAAIP,EAAYO,EAAGoB,OAAOC,QAAQA,MAAO7B,IACvEA,KAAcM,EAAOK,SAAWL,EAAOK,QAAQX,WAAaA,IAC3D,4BAAQ0B,KAAK,UAAb,oBAIJ,kBAACtC,EAAD,KACE,kBAACE,EAAD,CAAW+B,SAxDE,6CAyDX,kBAAC9B,EAAD,yBAGA,kBAACE,EAAD,CAAUoC,MAAO3B,EAAiByB,SAAU,SAAAnB,GAAE,OAAIL,EAAmBK,EAAGoB,OAAOC,UAC9EvB,EAAOK,SACN,kBAAChB,EAAD,CAAQ+B,KAAK,UAAb,YAIJ,kBAACpC,EAAD,CAAW+B,SAlEE,6CAmEX,kBAAC9B,EAAD,yBAGA,kBAACE,EAAD,CAAUoC,MAAOzB,EAAiBuB,SAAU,SAAAnB,GAAE,OAAIH,EAAmBG,EAAGoB,OAAOC,UAC9EvB,EAAOK,SACN,kBAAChB,EAAD,CAAQ+B,KAAK,UAAb,e,MExEZI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a8012234.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const PasswordContainer = styled.form`\n  display: block;\n  text-align: center;\n`\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nexport const FormField = styled.form`\n  background: #cecece;\n  width: 100%;\n  max-width: 500px;\n  margin-top: 20px;\n  padding: 15px;\n  border: 1px solid black\n`\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: bold;\n  text-transform: capitalize;\n`\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  min-height: 150px;\n`\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  padding: 5px 10px;\n  text-transform: uppercase;\n`\n","import React, { useState, useRef } from 'react'\nimport * as CryptoJS from 'crypto-js'\nimport getCrypto from './crypto2'\nimport { Button, Container, FormField, Label, PasswordContainer, Textarea } from './style'\n\nfunction App (props) {\n  const [password, setPassword] = useState('')\n  const [encryptableText, setEncryptableText] = useState('')\n  const [decryptableText, setDecryptableText] = useState('')\n  const cipher = useRef(null)\n\n  function generateCipher (ev) {\n    ev.preventDefault()\n\n    if (!password) return false\n\n    cipher.current = getCrypto(password)\n    setPassword('')\n\n    return false\n  }\n\n  async function encryptData (ev) {\n    ev.preventDefault()\n\n    if (!encryptableText) return false\n\n    const encrypted = await cipher.current.encrypt(encryptableText)\n\n    console.log(encrypted.toString())\n\n    const decrypted = await cipher.current.decrypt(encrypted.toString())\n\n    console.log(decrypted.toString(CryptoJS.enc.Utf8))\n\n    return false\n  }\n\n  async function decryptData (ev) {\n    ev.preventDefault()\n\n    if (!decryptableText) return false\n\n    const decrypted = await cipher.current.decrypt(decryptableText)\n\n    console.log(decrypted.toString(CryptoJS.enc.Utf8))\n\n    return false\n  }\n\n  return (\n    <div>\n      <PasswordContainer onSubmit={generateCipher}>\n        <label htmlFor=\"password\" className=\"d-block\">Password</label>\n        <input type=\"text\" onChange={ev => setPassword(ev.target.value)} value={password}/>\n        {password && (!cipher.current || cipher.current.password !== password) && (\n          <button type=\"submit\">Generate Cipher</button>\n        )}\n      </PasswordContainer>\n\n      <Container>\n        <FormField onSubmit={encryptData}>\n          <Label>\n            Encryptable text\n          </Label>\n          <Textarea value={encryptableText} onChange={ev => setEncryptableText(ev.target.value)}/>\n          {cipher.current && (\n            <Button type=\"submit\">Encrypt</Button>\n          )}\n        </FormField>\n\n        <FormField onSubmit={decryptData}>\n          <Label>\n            Decryptable text\n          </Label>\n          <Textarea value={decryptableText} onChange={ev => setDecryptableText(ev.target.value)}/>\n          {cipher.current && (\n            <Button type=\"submit\">Decrypt</Button>\n          )}\n        </FormField>\n\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import * as CryptoJS from 'crypto-js'\n\nexport default function crypto2 (password) {\n  function encrypt (message) {\n    return CryptoJS.AES.encrypt(message, password)\n  }\n\n  function decrypt (message) {\n    return CryptoJS.AES.decrypt(message, password)\n  }\n\n  return {\n    encrypt,\n    decrypt,\n    password\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}